# https://www.playframework.com/documentation/latest/ScalaRouting

GET     /                                        gui.ReactController.guiRoute(reactRoute = "")
GET     /iapi/l10nMessages                       api.I18nController.l10nMessages
GET     /iapi/timeZones                          api.I18nController.timeZones

GET     /iapi/validations/cellPhoneNumbers       api.ValidationsController.cellPhoneNumbers(cellPhoneNumber: String)
GET     /iapi/validations/emailAddresses         api.ValidationsController.emailAddresses(emailAddress: String)
GET     /iapi/validations/urls                   api.ValidationsController.urls(url: String)

POST    /iapi/elections                          api.ElectionsController.postElection()
# cf. "AnyVal wrappers for other supported types" at "https://www.playframework.com/documentation/latest/ScalaRouting#Parameter-types
# timeZone could also be mapped to a ZoneId by Play: https://www.playframework.com/documentation/latest/ScalaRequestBinders#QueryStringBindable
GET     /iapi/elections/:election                api.ElectionsController.getElection(election: domain.value_objects.Id, timeZone: Option[String])
PUT     /iapi/elections/:election/text           api.ElectionsController.putText(election: domain.value_objects.Id)
PUT     /iapi/elections/:election/nominees       api.ElectionsController.putNominees(election: domain.value_objects.Id)
PUT     /iapi/elections/:election/visibility     api.ElectionsController.putVisibility(election: domain.value_objects.Id)
POST    /iapi/elections/:election/reminders      api.ElectionsController.postReminder(election: domain.value_objects.Id)
PATCH   /iapi/elections/:election/subscriptions  api.ElectionsController.patchSubscriptions(election: domain.value_objects.Id)
DELETE  /iapi/elections/:election                api.ElectionsController.deleteElection(election: domain.value_objects.Id)
POST    /iapi/elections/:election/votes          api.ElectionsController.postVote(election: domain.value_objects.Id)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                            controllers.Assets.versioned(path="/public", file: Asset)

GET     /fegui/*reactFile                        gui.ReactController.guiFile(reactFile)
GET     /*reactRoute                             gui.ReactController.guiRoute(reactRoute)
